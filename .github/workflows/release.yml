name: Release

on:
  push:
    branches: [master]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0

      - name: Setup environment
        id: setups
        run: |-
          echo "::set-output name=yarn_cache_dir::$(yarn cache dir)"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          check-latest: true

      - name: Yarn cache
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.setups.outputs.yarn_cache_dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install packages
        run: yarn --frozen-lockfile

      - name: Test All
        run: yarn test

      - name: Create Release or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
